services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181"
    hostname: zookeeper
    networks:
      - runify-network
    volumes:
      - zookeeper_data:/data
      - zookeeper_datalog:/datalog

  kafka:
      image: wurstmeister/kafka
      ports:
        - "9092:9092"
      hostname: kafka
      environment:
        KAFKA_CREATE_TOPICS: "events:1:1"
        KAFKA_LISTENERS: INSIDE://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
        KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://kafka:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_BROKER_ID: 1
        KAFKA_LOG_DIRS: /kafka/kafka-logs-1
        KAFKA_DELETE_TOPIC_ENABLE: "true"
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_NUM_PARTITIONS: 1
        KAFKA_DEFAULT_REPLICATION_FACTOR: 1
        KAFKA_MIN_INSYNC_REPLICAS: 1
        KAFKA_LOG_RETENTION_HOURS: 24
        KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
      volumes:
        - kafka_data:/kafka/kafka-logs-1
        - kafka_data:/tmp/kafka-logs-1
      deploy:
        resources:
          limits:
            memory: 1G
          reservations:
            memory: 512M
        restart_policy:
          condition: on-failure
          max_attempts: 3
      depends_on:
        zookeeper:
          condition: service_healthy
      healthcheck:
        test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
        interval: 30s
        timeout: 10s
        retries: 5
        start_period: 30s
      networks:
        - runify-network

  mysql:
      image: mysql:latest
      container_name: mysql-container
      environment:
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        MYSQL_DATABASE: events
      ports:
        - "3306:3306"  
      volumes:
        - mysql_data:/var/lib/mysql  
      command:
        - --character-set-server=utf8mb4
        - --collation-server=utf8mb4_unicode_ci
        - --bind-address=0.0.0.0
      healthcheck:
        test: ["CMD", "mysql", "-uroot", "-p${MYSQL_ROOT_PASSWORD}", "-e", "SELECT 1"]
        interval: 5s
        timeout: 5s
        retries: 5
      networks:
        - runify-network

  receiver:
    build:
      context: ./Receiver
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - runify-network
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - kafka

  storage:
    build:
      context: ./Storage
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
    networks:
      - runify-network
    environment:
      - PYTHONUNBUFFERED=1
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PORT=3306
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started

  processing:
    build:
      context: ./Processing
      dockerfile: Dockerfile
    ports:
      - "8100:8100"
    networks:
      - runify-network
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - storage

  analyzer:
    build:
      context: ./Analyzer
      dockerfile: Dockerfile
    ports:
      - "8110:8110"
    networks:
      - runify-network
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - kafka

  dashboard:
    build:
      context: ./dashboard-ui
      dockerfile: Dockerfile
    ports:
      - "8888:80"
    depends_on:
      - "processing"
      - "analyzer"

networks:
  runify-network:
    driver: bridge

volumes:
  mysql_data:
  kafka_data:
  zookeeper_data:
  zookeeper_datalog: